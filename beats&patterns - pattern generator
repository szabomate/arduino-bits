const int beatPot=A0;      // selects the maximum number of beats (1-8) in the pattern
const int patternPot=A1;   // selects pattern variation
const int bit1=0;
const int bit2=1;
const int bit3=2;
const int bit4=3;
const int bit5=4;
const int bit6=5;
const int bit7=6;
const int bit8=7;


void setup()
{
  pinMode(bit1,OUTPUT);
  pinMode(bit2,OUTPUT);
  pinMode(bit3,OUTPUT);
  pinMode(bit4,OUTPUT);
  pinMode(bit5,OUTPUT);
  pinMode(bit6,OUTPUT);
  pinMode(bit7,OUTPUT);
  pinMode(bit8,OUTPUT);
}

void loop ()
{ 
  // select maximum number of beats ("bit")
  int beat=map(analogRead(beatPot),0,1023,1,8);
  
  // determine maximum number of patterns ("patternMax") based on the maximum number of beats
  int patternMax;
  if (beat==1){patternMax=7;}
  if (beat==2){patternMax=27;}
  if (beat==3){patternMax=55;}
  if (beat==4){patternMax=69;}
  if (beat==5){patternMax=55;}
  if (beat==6){patternMax=27;}
  if (beat==7){patternMax=7;}
  if (beat==8){patternMax=0;}  
  
  // select pattern
  int selectPattern=map(analogRead(patternPot),0,1023,0,patternMax);
  
  
  // arrays of patterns 
  int beat1Patterns[] = {1, 2, 4, 8, 16, 32, 64, 128};
  int beat2Patterns[] = {3, 5, 6, 9, 10, 12, 17, 18, 20, 24, 33, 34, 36, 40, 48, 65, 66, 68, 72, 80, 96, 129, 130, 132, 136, 144, 160, 192};
  int beat3Patterns[] = {7, 11, 13, 14, 19, 21, 22, 25, 26, 28, 35, 37, 38, 41, 42, 44, 49, 50, 52, 56, 67, 69, 70, 73, 74, 76, 81, 82, 84, 88, 97, 98, 100, 104, 112, 131, 133, 134, 137, 138, 140, 145, 146, 148, 152, 161, 162, 164, 168, 176, 193, 194, 196, 200, 208, 224};
  int beat4Patterns[] = {15, 23, 27, 29, 30, 39, 43, 45, 46, 51, 53, 54, 57, 58, 60, 71, 75, 77, 78, 83, 85, 86, 89, 90, 92, 99, 101, 102, 105, 106, 108, 113, 114, 116, 120, 135, 139, 141, 142, 147, 149, 150, 153, 154, 156, 163, 165, 166, 169, 170, 172, 177, 178, 180, 184, 195, 197, 198, 201, 202, 204, 209, 210, 212, 216, 225, 226, 228, 232, 240};
  int beat5Patterns[] = {31, 47, 55, 59, 61, 62, 79, 87, 91, 93, 94, 103, 107, 109, 110, 115, 117, 118, 121, 122, 124, 143, 151, 155, 157, 158, 167, 171, 173, 174, 179, 181, 182, 185, 186, 188, 199, 203, 205, 206, 211, 213, 214, 217, 218, 220, 227, 229, 230, 233, 234, 236, 241, 242, 244, 248};
  int beat6Patterns[] = {63, 95, 111, 119, 123, 125, 126, 159, 175, 183, 187, 189, 190, 207, 215, 219, 221, 222, 231, 235, 237, 238, 243, 245, 246, 249, 250, 252};
  int beat7Patterns[] = {127, 191, 223, 239, 247, 251, 253, 254};
  int beat8Patterns[] = {255};
  
  // select output pattern
  int pattern;
  if (beat==1){pattern=beat1Patterns[selectPattern];}
  if (beat==2){pattern=beat2Patterns[selectPattern];}
  if (beat==3){pattern=beat3Patterns[selectPattern];}
  if (beat==4){pattern=beat4Patterns[selectPattern];}                        
  if (beat==5){pattern=beat5Patterns[selectPattern];}
  if (beat==6){pattern=beat6Patterns[selectPattern];}
  if (beat==7){pattern=beat7Patterns[selectPattern];}
  if (beat==8){pattern=beat8Patterns[selectPattern];} 
                          
  // show the pattern
  digitalWrite(bit1,pattern%2);
  digitalWrite(bit2,pattern/2%2);
  digitalWrite(bit3,pattern/4%2);
  digitalWrite(bit4,pattern/8%2);
  digitalWrite(bit5,pattern/16%2);
  digitalWrite(bit6,pattern/32%2);
  digitalWrite(bit7,pattern/64%2);
  digitalWrite(bit8,pattern/128%2);

}
